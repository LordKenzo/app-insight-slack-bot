name: Deploy Azure Functions V.1

on:
  workflow_dispatch:
    inputs:
      deploy_to_production:
        description: "Deploy to production?"
        type: boolean
        required: true
        default: false
      resource_group_name:
        description: The name of the workspace to create the artifact for.
        required: true
        type: choice
        options:
          - lf-itn-rg-bot

  push:
    branches: [main] # Aggiunto trigger automatico su push nel branch main
    paths:
      - "src/**" # Trigger solo quando ci sono modifiche nel codice sorgente
      - "package.json"
    inputs:
      resource_group_name:
        description: The name of the workspace to create the artifact for.
        required: true
        type: choice
        options:
          - lf-itn-rg-bot
      environment:
        description: Environment where the artifact will be deployed.
        required: false
        default: "production"
        type: choice
        options:
          - production

env:
  BUNDLE_NAME: bundle
  BASE_DIRECTORY: .

jobs:
  build:
    name: Build Artifact
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install
        working-directory: ${{ env.BASE_DIRECTORY }}

      - name: Build project
        run: npm run build

      - name: Build the Function App Artifact
        id: make-function-app-artifact
        run: |
          npm pkg set --json "bundledDependencies"=true
          npm pkg set --json "files"='["dist", "host.json"]'
          npx npm-pack-zip
          package_name=$(jq -r .name package.json)
          mv ${package_name//\/}.zip ${{ env.BUNDLE_NAME }}.zip
          echo "artifact-path=$(realpath ${{ env.BUNDLE_NAME }}.zip)" >> "$GITHUB_OUTPUT"
        working-directory: ${{ env.BASE_DIRECTORY }}

      - name: Upload Artifact
        uses: actions/upload-artifact@694cdabd8bdb0f10b2cea11669e1bf5453eed0a6 # v4.2.0
        with:
          name: ${{ env.BUNDLE_NAME }}
          path: ${{ steps.make-function-app-artifact.outputs.artifact-path }}
          if-no-files-found: error
          retention-days: 7

  deploy:
    name: Deploy To Staging
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4.1.1
        with:
          name: ${{ env.BUNDLE_NAME }}

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy
        uses: azure/webapps-deploy@v2
        with:
          resource-group-name: ${{ github.event.inputs.resource_group_name }}
          app-name: ${{ secrets.AZURE_FUNCTION_APP_NAME }}
          package: ${{ env.BUNDLE_NAME }}.zip
          slot-name: "staging"

  deploy-to-production:
    name: Deploy To Production
    needs: [build]
    if: github.event_name == 'workflow_dispatch' && inputs.deploy_to_production == true
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.swap-slots.outputs.url }}
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Swap Slots
        id: swap-slots
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az functionapp deployment slot swap \
              -g ${{ secrets.AZURE_RESOURCE_GROUP }} \
              -n ${{ secrets.AZURE_FUNCTION_APP_NAME }} \
              --slot staging \
              --target-slot production
            echo "url=https://${{ secrets.AZURE_FUNCTION_APP_NAME }}.azurewebsites.net" >> $GITHUB_OUTPUT
